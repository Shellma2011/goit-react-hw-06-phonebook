{"version":3,"sources":["components/Section/Section.styled.js","components/Section/Section.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Container/Container.styled.js","components/Container/Container.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["Title","styled","h1","SectionPhonebook","section","Section","title","children","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","contactsActions","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","console","log","contact","includes","PhonebookForm","form","PhonebookLabel","label","PhonebookInput","input","PhonebookButton","button","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","nameInputId","telInputId","handleChange","e","target","value","onSubmit","preventDefault","find","alert","htmlFor","type","onChange","pattern","required","ContactListStyled","ul","ContactItemStyled","li","ContactInfoStyled","p","ContactButton","ContactList","map","onClick","onDeleteContact","FilterLabel","FilterInput","Filter","TitleContacts","h2","ContainerContacts","div","Container","App","createReducer","actions","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"iPAEMA,EAAQC,IAAOC,GAAV,mHAOLC,EAAmBF,IAAOG,QAAV,kO,OCNP,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,eAACJ,EAAD,WACGG,GAAS,cAACN,EAAD,UAAQM,IACjBC,K,oDCJMC,EAAaC,YAAa,gBAAgB,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CAC5EC,QAAS,CACPC,GAAIC,IAAQC,WACZL,OACAC,cAISK,EAAgBP,YAAa,mBAE7BQ,EAAeR,YAAa,yBAG1BS,EADS,CAAEV,aAAYQ,gBAAeC,gBCfxCE,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OACtCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QAEpCC,EAAqB,SAAAL,GAChC,IAAMC,EAAWF,EAAYC,GACvBI,EAASD,EAAUH,GACnBM,EAAmBF,EAAOG,cAIhC,OAFAC,QAAQC,IAAI,4BAA6BL,GACzCI,QAAQC,IAAI,8BAA+BR,GACpCA,EAASG,QAAO,SAAAM,GAAO,OAAIA,EAAQpB,KAAKiB,cAAcI,SAASL,OCRlEM,EAAgB/B,IAAOgC,KAAV,uIAQbC,EAAiBjC,IAAOkC,MAAV,iTAiBdC,EAAiBnC,IAAOoC,MAAV,0JASdC,EAAkBrC,IAAOsC,OAAV,qYCvBN,SAASC,IACtB,MAAwBC,mBAAS,IAAjC,mBAAO/B,EAAP,KAAagC,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAO9B,EAAP,KAAegC,EAAf,KAEMtB,EAAWuB,YAAYzB,GACvB0B,EAAWC,cAEXC,EAAcjC,IAAQC,WACtBiC,EAAalC,IAAQC,WAErBkC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBzC,EAAR,EAAQA,KAAM0C,EAAd,EAAcA,MAEd,OAAQ1C,GACN,IAAK,OACHgC,EAAQU,GACR,MAEF,IAAK,SACHT,EAAUS,GACV,MAEF,QACE,SAoBN,OACE,eAACpB,EAAD,CAAeqB,SAjBI,SAAAH,GAGnB,GAFAA,EAAEI,iBAGAjC,EAASkC,MACP,SAAAzB,GAAO,OAAIA,EAAQpB,KAAKiB,gBAAkBjB,EAAKiB,eAAiBG,EAAQnB,SAAWA,KAGrF,OAAO6C,MAAM,GAAD,OAAI9C,EAAJ,6BAGdmC,EAASrC,EAAW,CAAEE,OAAMC,YAC5B+B,EAAQ,IACRC,EAAU,KAIV,UACE,eAACT,EAAD,CAAgBuB,QAASV,EAAzB,iBAGE,cAACX,EAAD,CACEvB,GAAIkC,EACJW,KAAK,OACLhD,KAAK,OACL0C,MAAO1C,EACPiD,SAAUV,EACVW,QAAQ,yHACRtD,MAAM,yIACNuD,UAAQ,OAGZ,eAAC3B,EAAD,CAAgBuB,QAAST,EAAzB,oBAEE,cAACZ,EAAD,CACEvB,GAAImC,EACJU,KAAK,MACLhD,KAAK,SACL0C,MAAOzC,EACPgD,SAAUV,EACVW,QAAQ,yFACRtD,MAAM,+FACNuD,UAAQ,OAGZ,cAACvB,EAAD,CAAiBoB,KAAK,SAAtB,4BCnFN,I,QAAMI,EAAoB7D,IAAO8D,GAAV,iSAiBjBC,EAAoB/D,IAAOgE,GAAV,mSAiBjBC,EAAoBjE,IAAOkE,EAAV,iDAIjBC,EAAgBnE,IAAOsC,OAAV,+XCEJ8B,EA/BK,WAClB,IAAMhD,EAAWuB,YAAYnB,GACvBoB,EAAWC,cAIjB,OACE,cAACgB,EAAD,UACGzC,EAASiD,KAAI,gBAAGzD,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,eAACqD,EAAD,WACE,cAACE,EAAD,UAAoBxD,EAAO,MAC3B,cAACwD,EAAD,UAAoBvD,IACpB,cAACyD,EAAD,CAAeV,KAAK,SAASa,QAAS,kBARtB,SAAA1D,GAAE,OAAIgC,EAAS7B,EAAcH,IAQD2D,CAAgB3D,IAA5D,sBAHsBA,SClB1B4D,EAAcxE,IAAOkC,MAAV,8RAiBXuC,EAAczE,IAAOoC,MAAV,0JCIFsC,EAlBA,WACb,IAAMvB,EAAQR,YAAYrB,GACpBsB,EAAWC,cAEjB,OACE,8BACE,eAAC2B,EAAD,mCAEE,cAACC,EAAD,CACEhB,KAAK,OACLN,MAAOA,EACPO,SAAU,SAAAT,GAAC,OAAIL,EAAS5B,EAAaiC,EAAEC,OAAOC,iBCdlDwB,EAAgB3E,IAAO4E,GAAV,mHAObC,GAAoB7E,IAAO8E,IAAV,8ICMRC,GAZG,SAAC,GAAD,IAAG1E,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAChB,eAACuE,GAAD,WACGxE,GAAS,cAACsE,EAAD,UAAgBtE,IACzBC,MCAU,SAAS0E,KACtB,OACE,8BACE,eAAC5E,EAAD,CAASC,MAAM,YAAf,UACE,cAACkC,EAAD,IACA,eAAC,GAAD,CAAWlC,MAAM,WAAjB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Y,iFCFJgB,GAAQ4D,YAPO,CACnB,CAAErE,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEE,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,eAGrB,sBACxBwE,EAAQ3E,YAAa,SAACY,EAAD,YAAUR,SAAV,oBAAqCQ,OADlC,gBAExB+D,EAAQnE,eAAgB,SAACI,EAAD,OAAUR,EAAV,EAAUA,QAAV,OAAwBQ,EAAMI,QAAO,qBAAGX,KAAgBD,QAFxD,KAKrBY,GAAS0D,YAAc,GAAI,CAC/B,wBAAyB,SAACE,EAAD,YAAMxE,WAGlByE,gBAAgB,CAAE/D,SAAOE,YCLlC8D,GAAwB,CAC5BC,IAAK,WACLC,aACAC,UAAW,CAAC,WAGRC,GAAU,uBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAHhD,CAMdC,OAGWC,GAAQC,YAAe,CAClCC,QAAS,CACPlF,SAAUmF,aAAelB,GAAuBmB,KAElDf,cACAgB,UAAUC,IAGCC,GAAYC,aAAaR,I,MC9BtCS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAaY,QAAS,KAAML,UAAWA,GAAvC,SACE,cAAC3B,GAAD,UAINiC,SAASC,eAAe,W","file":"static/js/main.102d68a9.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Title = styled.h1`\n  padding: 20px;\n  text-transform: uppercase;\n  font-size: 24px;\n  color: #5c6368;\n`;\n\nconst SectionPhonebook = styled.section`\n  text-align: center;\n  width: 440px;\n  margin: 30px auto;\n\n  border: 1px solid grey;\n  border-radius: 2%;\n\n  background: white;\n  box-shadow: -1px 15px 30px -12px black;\n  z-index: 9999;\n`;\n\nexport { Title, SectionPhonebook };\n","import PropTypes from 'prop-types';\nimport { Title, SectionPhonebook } from './Section.styled';\n\nexport default function Section({ title, children }) {\n  return (\n    <SectionPhonebook>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionPhonebook>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nexport const deleteContact = createAction('contacts/delete');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\nconst contactsActions = { addContact, deleteContact, changeFilter };\nexport default contactsActions;\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  console.log('getVisibleContacts filter', filter);\n  console.log('getVisibleContacts contacts', contacts);\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n};\n","import styled from 'styled-components';\n\nconst PhonebookForm = styled.form`\n  width: 340px;\n  margin: 0 auto;\n  padding: 16px;\n  border: 1px solid #2a2a2a;\n  border-radius: 4px;\n`;\n\nconst PhonebookLabel = styled.label`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n\n  padding: 12px 16px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n\n  resize: none;\n  margin-bottom: 12px;\n`;\n\nconst PhonebookInput = styled.input`\n  padding: 4px 12px;\n  width: 280px;\n  margin-top: 5px;\n  font: inherit;\n  line-height: 12px;\n  letter-spacing: 0.01em;\n`;\n\nconst PhonebookButton = styled.button`\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n\n  width: 100%;\n  margin-left: auto;\n  border-radius: 4px;\n  padding: 12px 24px;\n  background-color: #3f51b5;\n  color: #fff;\n  font-weight: 500;\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n\n  &:active {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nexport { PhonebookForm, PhonebookLabel, PhonebookInput, PhonebookButton };\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-actions';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport shortid from 'shortid';\nimport {\n  PhonebookForm,\n  PhonebookLabel,\n  PhonebookInput,\n  PhonebookButton,\n} from './ContactForm.styled';\n// import toast, { Toaster } from 'react-hot-toast';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const nameInputId = shortid.generate();\n  const telInputId = shortid.generate();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase() || contact.number === number,\n      )\n    ) {\n      return alert(`${name} is already in contacts!`);\n    }\n\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <PhonebookForm onSubmit={handleSubmit}>\n      <PhonebookLabel htmlFor={nameInputId}>\n        {/* <PhonebookLabel> */}\n        Name\n        <PhonebookInput\n          id={nameInputId}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </PhonebookLabel>\n      <PhonebookLabel htmlFor={telInputId}>\n        {/* <PhonebookLabel> */} Number\n        <PhonebookInput\n          id={telInputId}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </PhonebookLabel>\n      <PhonebookButton type=\"submit\">Add contact</PhonebookButton>\n    </PhonebookForm>\n  );\n}\n","import styled from 'styled-components';\n\nconst ContactListStyled = styled.ul`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n\n  width: 340px;\n  margin: 20px auto;\n\n  padding: 12px 16px;\n  border: 1px solid #2a2a2a;\n  border-radius: 4px;\n\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n`;\n\nconst ContactItemStyled = styled.li`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n\n  width: 300px;\n  margin: 5px auto;\n\n  padding: 12px 16px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n`;\n\nconst ContactInfoStyled = styled.p`\n  margin-left: 4px;\n`;\n\nconst ContactButton = styled.button`\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n\n  width: auto;\n  margin-left: auto;\n  border-radius: 4px;\n  padding: 6px;\n  background-color: #3f51b5;\n  color: #fff;\n  font-weight: 500;\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n\n  &:active {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nexport { ContactListStyled, ContactItemStyled, ContactInfoStyled, ContactButton };\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\nimport {\n  ContactListStyled,\n  ContactItemStyled,\n  ContactInfoStyled,\n  ContactButton,\n} from './ContactList.styled';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <ContactListStyled>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItemStyled key={id}>\n          <ContactInfoStyled>{name + ':'}</ContactInfoStyled>\n          <ContactInfoStyled>{number}</ContactInfoStyled>\n          <ContactButton type=\"button\" onClick={() => onDeleteContact(id)}>\n            Delete\n          </ContactButton>\n        </ContactItemStyled>\n      ))}\n    </ContactListStyled>\n  );\n};\n\nContactList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nconst FilterLabel = styled.label`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n\n  width: 340px;\n  margin: 0 auto;\n\n  padding: 12px 16px;\n  border: 1px solid #2a2a2a;\n  border-radius: 4px;\n\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n`;\n\nconst FilterInput = styled.input`\n  padding: 4px 12px;\n  width: 300px;\n  margin-top: 5px;\n  font: inherit;\n  line-height: 12px;\n  letter-spacing: 0.01em;\n`;\n\nexport { FilterLabel, FilterInput };\n","import { FilterLabel, FilterInput } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <FilterLabel>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          value={value}\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        />\n      </FilterLabel>\n    </div>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nconst TitleContacts = styled.h2`\n  padding: 10px;\n  text-transform: uppercase;\n  font-size: 20px;\n  color: #5c6368;\n`;\n\nconst ContainerContacts = styled.div`\n  max-width: 1440px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nexport { TitleContacts, ContainerContacts };\n","import PropTypes from 'prop-types';\nimport { TitleContacts, ContainerContacts } from './Container.styled';\n\nconst Container = ({ title, children }) => (\n  <ContainerContacts>\n    {title && <TitleContacts>{title}</TitleContacts>}\n    {children}\n  </ContainerContacts>\n);\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\n\nexport default function App() {\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n        <Container title=\"Contacts\">\n          <Filter />\n          <ContactList />\n        </Container>\n      </Section>\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst inicialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst items = createReducer(inicialState, {\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\n  [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  'contacts/changeFilter': (_, { payload }) => payload,\n});\n\nexport default combineReducers({ items, filter });\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { store, persistor } from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}